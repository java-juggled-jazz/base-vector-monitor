[sources.nginx-logs-scanner]
type = "file"
include = [$NGINX_LOGS_DIRECTORY]
read_from = "beginning"

[sources.auth-logs-scanner]
type = "file"
inclue = [$AUTH_LOGS_DIRECTORY]
read_from = "beginning"

[transforms.nginx-logs-remap]
type = "remap"
inputs = ["nginx-logs-scanner"]
source = """
. |= parse_regex!(.message, r'^\"(?P<timestamp>.*)\" client=(?P<client>.*) method=(?P<method>.*) request=\"(?P<method_type>.*) (?P<request_path>.*) (?P<http_version>.*)\" request_length=(?P<request_length>.*) status=(?P<status>.*) bytes_sent=(?P<bytes_sent>.*) body_bytes_sent=(?P<body_bytes_sent>.*) referer=(?P<referer>.*) user_agent=\"(?P<user_agent>.*)\" upstream_addr=(?P<upstream_addr>.*) upstream_status=(?P<upstream_status>.*) request_time=(?P<request_time>.*) upstream_response_time=(?P<upstream_response_time>.*) upstream_connect_time=(?P<upstream_connect_time>.*) upstream_header_time=(?P<upstream_header_time>.*)$')
#covnert metrics to proper types
#.timestamp = parse_timestamp(.timestamp, "%Y/%m/%d %H:%M:%S %z") ?? now()
.timestamp, _ = to_float(.timestamp)
.request_length = to_int!(.request_length)
.status = to_int!(.status)
.bytes_sent = to_int!(.bytes_sent)
.body_bytes_sent = to_int!(.body_bytes_sent)
.upstream_status = to_int!(.upstream_status)
.request_time = to_float!(.request_time)
.upstream_response_time = to_float!(.upstream_response_time)
.upstream_connect_time = to_float!(.upstream_connect_time)
.upstream_header_time = to_float!(.upstream_header_time)
"""

[transforms.nginx-log-to-metric]
type = "log_to_metric"
inputs = [ "nginx-logs-remap" ]

  [[transforms.nginx-log-to-metric.metrics]]
  type = "histogram"
  field = "status"
  name = "status"
  namespace = "vector_metric"

    [transforms.nginx-log-to-metric.metrics.tags]
    status = "{{status}}"
    host = "{{client}}"

[sinks.metrics-to-console]
type = "console"
inputs = ["nginx-log-to-metric"]
target = "stdout"
encoding.codec = "json"

[sinks.metrics-to-prometheus]
type = "prometheus_exporter"
inputs = [ "nginx-log-to-metric" ]
default_namespace = "nginx-metrics"
address = "0.0.0.0:8080"
